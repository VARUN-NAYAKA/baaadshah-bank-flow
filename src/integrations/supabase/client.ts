
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || "https://opzutyfhpebfeovlqffv.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY || "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9wenV0eWZocGViZmVvdmxxZmZ2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDYxNzYxNzgsImV4cCI6MjA2MTc1MjE3OH0.Xnf_itL3902GHJhawCp8V0MKnHiSHo4Tcw9Luflj9qQ";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Simple function to check if the connection is working
export const checkSupabaseConnection = async () => {
  try {
    // Instead of querying a non-existent table, we'll use the health check endpoint
    const { error } = await supabase.auth.getSession();
    
    if (error) {
      console.error('Supabase connection error:', error);
      return false;
    }
    
    return true;
  } catch (error) {
    console.error('Supabase connection error:', error);
    return false;
  }
};
